#include <stdio.h>
#include <string.h>
#include <stdbool.h>

bool isScrambleHelper(char* s1, char* s2, int len) {
    // Si son iguales, es scramble
    if (strncmp(s1, s2, len) == 0) return true;
    
    // Verificación de caracteres
    int count[26] = {0};
    for (int i = 0; i < len; i++) {
        if (s1[i] < 'a' || s1[i] > 'z' || s2[i] < 'a' || s2[i] > 'z') {
            return false; // Solo permitimos letras minúsculas
        }
        count[s1[i] - 'a']++;
        count[s2[i] - 'a']--;
    }
    for (int i = 0; i < 26; i++) {
        if (count[i] != 0) return false;
    }
    
    // Probamos todas las posibles divisiones
    for (int i = 1; i < len; i++) {
        // Caso 1: No se intercambian las partes
        if (isScrambleHelper(s1, s2, i) && 
            isScrambleHelper(s1 + i, s2 + i, len - i)) {
            return true;
        }
        
        // Caso 2: Se intercambian las partes
        if (isScrambleHelper(s1, s2 + (len - i), i) && 
            isScrambleHelper(s1 + i, s2, len - i)) {
            return true;
        }
    }
    
    return false;
}

bool isScramble(char* s1, char* s2) {
    int len1 = strlen(s1);
    int len2 = strlen(s2);
    
    // Si las longitudes son diferentes, no puede ser scramble
    if (len1 != len2) return false;
    
    return isScrambleHelper(s1, s2, len1);
}

int main() {
    char s1[31], s2[31]; // Máximo 30 caracteres + terminador nulo
    
    printf("Ingrese la primera cadena (solo letras minusculas, max 30 caracteres): ");
    scanf("%30s", s1);
    
    printf("Ingrese la segunda cadena (solo letras minusculas, max 30 caracteres): ");
    scanf("%30s", s2);
    
    if (isScramble(s1, s2)) {
        printf("\"%s\" SI es un scramble de \"%s\"\n", s2, s1);
    } else {
        printf("\"%s\" NO es un scramble de \"%s\"\n", s2, s1);
    }
    
    return 0;
}
