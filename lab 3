#include <stdio.h>
#include <stdlib.h>
#include <string.h>


const char *digit_map[] = {
    "",    "",    "abc",  "def", 
    "ghi", "jkl", "mno",  "pqrs", 
    "tuv", "wxyz"
};


void backtrack(char **result, int *index, const char *digits, char *current, int pos) {
    if (pos == strlen(digits)) {
        current[pos] = '\0';  // 
        result[*index] = strdup(current);
        (*index)++;
        return;
    }
    
    int digit = digits[pos] - '0'; 
    const char *letters = digit_map[digit];
    
    for (int i = 0; i < strlen(letters); i++) {
        current[pos] = letters[i];
        backtrack(result, index, digits, current, pos + 1);
    }
}

char **letterCombinations(const char *digits, int *returnSize) {
    int len = strlen(digits);
    *returnSize = 0;
    
    if (len == 0) return NULL;  
    
    
    int total = 1;
    for (int i = 0; i < len; i++) {
        int digit = digits[i] - '0';
        total *= strlen(digit_map[digit]);
    }
    
    *returnSize = total;
    char **result = malloc(total * sizeof(char *));
    char *current = malloc(len + 1);  
    
    backtrack(result, &(int){0}, digits, current, 0);
    
    free(current);
    return result;
}


int main() {
    const char *digits = "23";
    int returnSize;
    char **combinations = letterCombinations(digits, &returnSize);
    
    printf("Combinaciones para \"%s\":\n", digits);
    for (int i = 0; i < returnSize; i++) {
        printf("\"%s\" ", combinations[i]);
        free(combinations[i]);  
    }
    free(combinations);  
    
    return 0;
}